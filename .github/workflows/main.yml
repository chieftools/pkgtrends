name: CI/CD

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  composer:
    name: composer install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-v6-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-v6-
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: intl, mbstring, zip

      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-scripts --no-autoloader

      - name: Generate Composer autoloader
        run: composer dump-autoload

  phpcs:
    name: phpcs
    needs: composer
    runs-on: ubuntu-latest
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: intl, mbstring, zip

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-v6-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-v6-
      - name: Validate code style
        run: composer phpcs-ci

  security:
    name: security
    needs: composer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Check for security issues in dependencies
        uses: symfonycorp/security-checker-action@v2

  deploy:
    if: github.ref == 'refs/heads/master'
    name: deploy
    needs: [ phpcs, security ]
    runs-on: ubuntu-latest
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.0
          extensions: intl, mbstring, zip

      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache Composer dependencies
        uses: actions/cache@v2
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-v6-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-v6-

      - name: Cache Yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install Yarn dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Deploy to production
        run: |
          echo ${GITHUB_SHA:0:8} > .version
          vendor/bin/vapor deploy production --commit="$GITHUB_SHA"
        env:
          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}

  sentry:
    if: github.ref == 'refs/heads/master'
    name: sentry release
    needs: [ phpcs, security ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Notify Sentry
        uses: docker://stayallive/sentry:release
        env:
          PLUGIN_DEPLOY: 'production'
          PLUGIN_SENTRY_URL: 'https://observ.app/'
          PLUGIN_SENTRY_ORG: 'irongate'
          PLUGIN_SENTRY_PROJECT: 'pkgtrends'
          PLUGIN_SENTRY_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
